package pfm2;

import java.awt.Color;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.LinkedList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//Main class for the dashboardWindow
public class dashboardWindow extends javax.swing.JFrame {
    
    // Member variables for the dashboardWindow
    private dashboardWindow dashboardWindow;
    private pfmWindow pfmWindow;
    private double totalIncomeCash = 0.0;
    private double totalExpenseCash = 0.0;
    private double previousTotalBalance = 0.0;
    private double totalIncomeCategorySum = 0.0;
    private double totalExpenseCategorySum = 0.0;
    
    //List to store transactions
    private final List<Transaction> transactionList = new LinkedList<>();
    
    //Constructor for the dashboardWindow
    public dashboardWindow() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        logoutBtn1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactionTbl = new javax.swing.JTable();
        javax.swing.JButton undoBtn = new javax.swing.JButton();
        totalBalancePanel = new javax.swing.JPanel();
        cashBalance = new javax.swing.JLabel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        TotalBalanceCash = new javax.swing.JTextField();
        moneySign = new javax.swing.JLabel();
        IncomeExpensePanel = new javax.swing.JPanel();
        javax.swing.JPanel jPanel4 = new javax.swing.JPanel();
        BackgroundC = new javax.swing.JPanel();
        addLabel = new javax.swing.JLabel();
        sourceCash = new javax.swing.JTextField();
        amountCash = new javax.swing.JTextField();
        dateCash = new com.toedter.calendar.JDateChooser();
        submitBtn = new javax.swing.JButton();
        categoryComboBox = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();

        jPanel8.setBackground(java.awt.Color.cyan);
        jPanel8.setForeground(java.awt.Color.green);

        jLabel17.setFont(new java.awt.Font("Arial Narrow", 3, 24)); // NOI18N
        jLabel17.setForeground(java.awt.Color.white);
        jLabel17.setText("Shopping");

        jLabel18.setFont(new java.awt.Font("Arial Narrow", 3, 24)); // NOI18N
        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setText("PHP");

        jLabel19.setFont(new java.awt.Font("Arial Narrow", 3, 24)); // NOI18N
        jLabel19.setForeground(java.awt.Color.white);
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("0.0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(28, 28, 28))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.lightGray);

        jPanel3.setBackground(java.awt.Color.pink);

        jLabel1.setBackground(new java.awt.Color(255, 171, 155));
        jLabel1.setFont(new java.awt.Font("Arial Narrow", 3, 70)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PFM");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        logoutBtn1.setFont(new java.awt.Font("Arial Narrow", 2, 18)); // NOI18N
        logoutBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pfm2/icons/logout.png"))); // NOI18N
        logoutBtn1.setText("Logout");
        logoutBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(logoutBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutBtn1)
                .addContainerGap())
        );

        transactionTbl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        transactionTbl.setFont(new java.awt.Font("Arial Narrow", 2, 24)); // NOI18N
        transactionTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Amount", "Category", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionTbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        transactionTbl.setGridColor(java.awt.Color.lightGray);
        transactionTbl.setName(""); // NOI18N
        transactionTbl.setRowHeight(30);
        transactionTbl.setRowMargin(5);
        transactionTbl.setShowGrid(true);
        jScrollPane1.setViewportView(transactionTbl);
        if (transactionTbl.getColumnModel().getColumnCount() > 0) {
            transactionTbl.getColumnModel().getColumn(0).setResizable(false);
            transactionTbl.getColumnModel().getColumn(1).setResizable(false);
            transactionTbl.getColumnModel().getColumn(2).setResizable(false);
            transactionTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        undoBtn.setFont(new java.awt.Font("Arial Narrow", 3, 24)); // NOI18N
        undoBtn.setForeground(new java.awt.Color(255, 102, 102));
        undoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pfm2/icons/arrows.png"))); // NOI18N
        undoBtn.setText("Undo");
        undoBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 102, 102), new java.awt.Color(255, 102, 102)));
        undoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoBtnActionPerformed(evt);
            }
        });

        totalBalancePanel.setBackground(new java.awt.Color(255, 255, 255));
        totalBalancePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 204, 0), new java.awt.Color(51, 204, 0), new java.awt.Color(51, 204, 0)));
        totalBalancePanel.setForeground(java.awt.Color.green);

        cashBalance.setFont(new java.awt.Font("Arial Narrow", 3, 48)); // NOI18N
        cashBalance.setForeground(new java.awt.Color(51, 204, 0));
        cashBalance.setText("Balance");

        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pfm2/icons/money (1).png"))); // NOI18N

        TotalBalanceCash.setEditable(false);
        TotalBalanceCash.setBackground(new java.awt.Color(255, 255, 255));
        TotalBalanceCash.setFont(new java.awt.Font("Arial Narrow", 3, 46)); // NOI18N
        TotalBalanceCash.setForeground(new java.awt.Color(51, 204, 0));
        TotalBalanceCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TotalBalanceCash.setText("0.0");
        TotalBalanceCash.setBorder(null);
        TotalBalanceCash.setPreferredSize(new java.awt.Dimension(40, 42));

        moneySign.setFont(new java.awt.Font("Arial Narrow", 3, 48)); // NOI18N
        moneySign.setForeground(new java.awt.Color(51, 204, 0));
        moneySign.setText("$");

        javax.swing.GroupLayout totalBalancePanelLayout = new javax.swing.GroupLayout(totalBalancePanel);
        totalBalancePanel.setLayout(totalBalancePanelLayout);
        totalBalancePanelLayout.setHorizontalGroup(
            totalBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalBalancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(totalBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(totalBalancePanelLayout.createSequentialGroup()
                        .addComponent(moneySign)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(TotalBalanceCash, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(totalBalancePanelLayout.createSequentialGroup()
                        .addComponent(cashBalance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        totalBalancePanelLayout.setVerticalGroup(
            totalBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalBalancePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(totalBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cashBalance)
                    .addComponent(jLabel10))
                .addGap(18, 30, Short.MAX_VALUE)
                .addGroup(totalBalancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalBalanceCash, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moneySign))
                .addGap(10, 10, 10))
        );

        IncomeExpensePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.blue, java.awt.Color.blue, java.awt.Color.blue));

        BackgroundC.setBackground(java.awt.Color.blue);
        BackgroundC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addLabel.setFont(new java.awt.Font("Arial Narrow", 3, 30)); // NOI18N
        addLabel.setForeground(java.awt.Color.white);
        addLabel.setText("Income");

        javax.swing.GroupLayout BackgroundCLayout = new javax.swing.GroupLayout(BackgroundC);
        BackgroundC.setLayout(BackgroundCLayout);
        BackgroundCLayout.setHorizontalGroup(
            BackgroundCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundCLayout.setVerticalGroup(
            BackgroundCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        sourceCash.setFont(new java.awt.Font("Arial Narrow", 2, 18)); // NOI18N
        sourceCash.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 2, 18))); // NOI18N
        sourceCash.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        amountCash.setFont(new java.awt.Font("Arial Narrow", 2, 18)); // NOI18N
        amountCash.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 2, 18))); // NOI18N

        dateCash.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 2, 18))); // NOI18N
        dateCash.setToolTipText("");
        dateCash.setFont(new java.awt.Font("Arial Narrow", 2, 18)); // NOI18N
        dateCash.setMinimumSize(new java.awt.Dimension(64, 47));
        dateCash.setPreferredSize(new java.awt.Dimension(64, 47));

        submitBtn.setBackground(java.awt.Color.blue);
        submitBtn.setFont(new java.awt.Font("Arial Narrow", 3, 18)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("Submit");
        submitBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        categoryComboBox.setFont(new java.awt.Font("Arial Narrow", 2, 18)); // NOI18N
        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Income", "Expense" }));
        categoryComboBox.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 2, 18))); // NOI18N
        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateCash, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(amountCash)
                    .addComponent(sourceCash)
                    .addComponent(BackgroundC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(BackgroundC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sourceCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(amountCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(dateCash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout IncomeExpensePanelLayout = new javax.swing.GroupLayout(IncomeExpensePanel);
        IncomeExpensePanel.setLayout(IncomeExpensePanelLayout);
        IncomeExpensePanelLayout.setHorizontalGroup(
            IncomeExpensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IncomeExpensePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        IncomeExpensePanelLayout.setVerticalGroup(
            IncomeExpensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IncomeExpensePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial Narrow", 2, 24)); // NOI18N
        jLabel2.setText("Recent Transactions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(undoBtn))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(IncomeExpensePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(totalBalancePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(96, 96, 96)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IncomeExpensePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalBalancePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(undoBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("dashboardWindow");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    // Method to update the total balance on the UI
    public void updateTotalBalance(double totalBalance) {
        // Update total balance label
        TotalBalanceCash.setText(String.valueOf(totalBalance));

        
// Check if the balance is negative and update text color accordingly
        if (totalBalance < 0) {
            cashBalance.setForeground(Color.RED);
            TotalBalanceCash.setForeground(Color.RED);
            totalBalancePanel.setBorder(BorderFactory.createLineBorder(Color.RED));
            moneySign.setForeground(Color.RED);
        } else {
            cashBalance.setForeground(new Color(51, 204, 0)); // Default color for positive balance
            TotalBalanceCash.setForeground(new Color(51, 204, 0));
            totalBalancePanel.setBorder(BorderFactory.createLineBorder(new Color(51, 204, 0)));
            moneySign.setForeground(new Color(51, 204, 0));
        }
    }
    
    // ActionListener for the logout button
    private void logoutBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtn1ActionPerformed
        // Initialize and show the pfmWindow, then dispose of the current dashboardWindow
        pfmWindow = new pfmWindow();
        pfmWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutBtn1ActionPerformed
    
    // ActionListener for the undo button
    private void undoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoBtnActionPerformed

        // Get the model of the transaction table
        DefaultTableModel model = (DefaultTableModel) transactionTbl.getModel();

        int rowCount = model.getRowCount();
        if (rowCount > 0) {
            // Get the last transaction and remove it from the list
            Transaction lastTransaction = transactionList.remove(transactionList.size() - 1);

            // Undo the corresponding balance update
            undoTransaction(lastTransaction);

            // Update TotalBalanceCash after undoing the transaction
            double newBalance = totalIncomeCash - totalExpenseCash;
            updateTotalBalance(newBalance);

            // Update the table after undoing the transaction
            updateTransactionTable();

            // Show success message
            JOptionPane.showMessageDialog(this, "Undo successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Show message if there are no transactions to undo
            JOptionPane.showMessageDialog(this, "No transactions to undo", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_undoBtnActionPerformed

    // Method to undo a transaction and update balances
    private void undoTransaction(Transaction transaction) {
        // Store the current total balance before making changes
        previousTotalBalance = totalIncomeCash - totalExpenseCash;

        // Update total balance based on the type of transaction (income or expense)
        if (transaction.getCategory().equals("Income")) {
            totalIncomeCash -= transaction.getAmount();
        } else if (transaction.getCategory().equals("Expense")) {
            totalExpenseCash -= transaction.getAmount();
        }

        // Update the corresponding category sum
        updateCategory(transaction.getCategory(), -transaction.getAmount());
    }

    // Method to update the category sum based on the category and amount
    private void updateCategory(String category, double amount) {
        switch (category) {
            case "Income" -> totalIncomeCategorySum += amount;
            case "Expense" -> totalExpenseCategorySum += amount;
            default -> {
            }
        }
    }

    // ActionListener for the submit button
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // Get user input from the text fields and date chooser
        String description = sourceCash.getText().trim();
        String sum = amountCash.getText().trim();
        String category = categoryComboBox.getSelectedItem().toString().trim();
        Date selectedDate = dateCash.getDate();
    
        // Validate user input
        if (description.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please input description", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (sum.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please input the Amount!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                double amount = Double.parseDouble(sum);

                // Validate selected date
                if (selectedDate == null) {
                JOptionPane.showMessageDialog(this, "What is the date?", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                     // Update balances based on the type of transaction
                    if (category.equals("Income")) {
                        totalIncomeCash += amount;
                    } else if (category.equals("Expense")) {
                        totalExpenseCash += amount;
                    }
                    
                    // Update the total balance on the UI
                    double newBalance = totalIncomeCash - totalExpenseCash;
                    updateTotalBalance(newBalance);

                    // Create a new Transaction object and add it to the list
                    Transaction transaction = new Transaction(description, amount, category, selectedDate);
                    transactionList.add(transaction);

                    // Sort transactions by date
                    sortTransactionsByDate();

                    // Update the balance in the dashboardWindow
                    if (dashboardWindow != null) {
                        dashboardWindow.updateTotalBalance(newBalance);
                    }
                    
                    // Show success message and reset input fields
                    JOptionPane.showMessageDialog(this, "Transaction added successfully!!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    sourceCash.setText("");
                    amountCash.setText("");
                    categoryComboBox.setSelectedIndex(0);
                    dateCash.setDate(null);
                }
            } catch (NumberFormatException e) {
                // Show error message for invalid amount format
                JOptionPane.showMessageDialog(this, "Invalid amount!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void sortTransactionsByDate() {
        // Sort transactions by date using Merge Sort
        Collections.sort(transactionList, new TransactionComparator());

        // Update the table after sorting
        updateTransactionTable();
    }

    private void updateTransactionTable() {
        // Update the transaction table based on the transactionList
        DefaultTableModel model = (DefaultTableModel) transactionTbl.getModel();
        model.setRowCount(0); // Clear the table

        for (Transaction transaction : transactionList) {
            // Add the transaction details to the table
            Object[] row = {transaction.getDescription(), transaction.getAmount(), transaction.getCategory(), transaction.getDate()};
            model.addRow(row);
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    // ActionListener for the category combo box
    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        // Change UI colors based on the selected category
        String selectedCategory = (String) categoryComboBox.getSelectedItem();
        if ("Income".equals(selectedCategory)) {
            sourceCash.setForeground(Color.BLUE);
            amountCash.setForeground(Color.BLUE);
            submitBtn.setBackground(Color.BLUE);
            BackgroundC.setBackground(Color.BLUE);
            IncomeExpensePanel.setBorder(BorderFactory.createLineBorder(Color.BLUE));
            addLabel.setText("Income");
        } else if ("Expense".equals(selectedCategory)) {
            sourceCash.setForeground(Color.RED);
            amountCash.setForeground(Color.RED);
            submitBtn.setBackground(Color.RED);
            BackgroundC.setBackground(Color.RED);
            IncomeExpensePanel.setBorder(BorderFactory.createLineBorder(Color.RED));
            addLabel.setText("Expense");
        }
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboardWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        // Create and display the dashboard window
        java.awt.EventQueue.invokeLater(() -> {
            new dashboardWindow().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackgroundC;
    private javax.swing.JPanel IncomeExpensePanel;
    private javax.swing.JTextField TotalBalanceCash;
    private javax.swing.JLabel addLabel;
    private javax.swing.JTextField amountCash;
    private javax.swing.JLabel cashBalance;
    private javax.swing.JComboBox<String> categoryComboBox;
    private com.toedter.calendar.JDateChooser dateCash;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn1;
    private javax.swing.JLabel moneySign;
    private javax.swing.JTextField sourceCash;
    private javax.swing.JButton submitBtn;
    private javax.swing.JPanel totalBalancePanel;
    private javax.swing.JTable transactionTbl;
    // End of variables declaration//GEN-END:variables
}